{"name": ["shgo_slsqp_sobol_cube", "shgo_powell_sobol_cube", "shgo_nelder_sobol_cube", "scipy_slsqp_cube", "scipy_powell_cube", "scipy_nelder_cube", "scipy_lbfgsb_cube", "pysot_ei_cube", "pysot_lcb_cube", "pysot_random_cube", "pysot_srbf_cube", "pysot_dycors_cube", "ax_default_cube", "optuna_cmaes_cube", "optuna_tpe_cube", "optuna_random_cube", "optuna_random_cube_clone", "optuna_random_cube_clone_1", "optuna_random_cube_clone_2", "platypus_genetic_cube", "platypus_evolutionary_cube", "platypus_nsgaii_cube", "platypus_cmaes_cube", "platypus_gde3_cube", "platypus_ibea_cube", "platypus_moead_cube", "platypus_omopso_cube", "platypus_smpso_cube", "platypus_spea2_cube", "platypus_epsmoea_cube", "nevergrad_ngopt_cube", "nevergrad_ngopt4_cube", "nevergrad_ngopt8_cube", "nevergrad_de_cube", "nevergrad_portfolio_cube", "nevergrad_oneplus_cube", "nevergrad_hammersley_cube", "hyperopt_atpe_cube", "hyperopt_rand_cube", "hyperopt_tpe_cube", "pymoo_nelder_cube", "pymoo_nsga3_cube", "pymoo_unsga3_cube", "pymoo_pattern_cube", "pymoo_nsga2_cube", "skopt_gp_default_cube", "ultraopt_random_cube", "ultraopt_etpe_cube", "bayesopt_ucb_cube", "bayesopt_ei_cube", "bayesopt_poi_cube", "dlib_cube"], "count": [0, 3, 2, 2, 0, 3, 3, 4, 4, 3, 2, 2, 7, 6, 7, 5, 5, 6, 6, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 3, 1, 6, 6, 6, 2, 1, 11, 8, 5, 7, 6, 4, 7, 0, 7, 3, 3, 2, 4, 4, 8], "rating": [1600, 1662.2564552732408, 1602.0012709101397, 1540.9737699347113, 1600, 1514.9486633597828, 1513.8268930920067, 1487.9713956205437, 1600.6330207066158, 1572.9976676249048, 1662.0310242537703, 1658.0356175927625, 1689.6620382623182, 1709.6344964075408, 1735.2370479789508, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1437.4880167376696, 1600, 1600, 1600, 1600, 1601.8613158574226, 1630.0, 1707.7154400273191, 1436.1198584773097, 1541.4273397877932, 1659.9043163452627, 1630.0, 1663.1982358515895, 1444.2615778458205, 1736.5993118221468, 1654.614495258289, 1578.4129855623703, 1604.1774710143345, 1677.048305252343, 1600, 1606.0172445821136, 1515.9114862886315, 1545.0181390162543, 1600.8657287598548, 1625.718692441771, 1577.990879471168, 1757.3881986389558], "traceback": ["passing", "Traceback (most recent call last):\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/humpday/comparison/eloratings.py\", line 43, in optimizer_game\n    with_count=True)\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/humpday/optimizers/shgocube.py\", line 25, in shgo_powell_sobol_cube\n    local_method='powell', sampling_method='sobol')\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/humpday/optimizers/shgocube.py\", line 77, in shgo_cube\n    sampling_method=sampling_method)\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 421, in shgo\n    shc.construct_complex()\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 733, in construct_complex\n    self.find_minima()\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 742, in find_minima\n    self.minimizers()\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 1261, in delaunay_complex_minimisers\n    self.delaunay_triangulation(grow=True, n_prc=self.n_prc)\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 1538, in delaunay_triangulation\n    self.Tri = spatial.Delaunay(self.C, incremental=True)\n  File \"qhull.pyx\", line 1840, in scipy.spatial.qhull.Delaunay.__init__\n  File \"qhull.pyx\", line 356, in scipy.spatial.qhull._Qhull.__init__\nscipy.spatial.qhull.QhullError: QH6239 Qhull precision error: initial Delaunay input sites are cocircular or cospherical.  Use option 'Qz' for the Delaunay triangulation or Voronoi diagram of cocircular/cospherical points; it adds a point \"at infinity\".  Alternatively use option 'QJ' to joggle the input.  Use option 'Qs' to search all points for the initial simplex.\n\ninput sites with last coordinate projected to a paraboloid\n- p1(v10):   0.5   0.5   0.5   0.5   0.5   0.5   0.5   0.5     2\n- p3(v9):  0.25  0.75  0.25  0.75  0.25  0.75  0.25  0.75   2.5\n- p2(v8):  0.75  0.25  0.75  0.25  0.75  0.25  0.75  0.25   2.5\n- p8(v7):  0.19  0.31  0.31  0.69  0.56  0.19 0.062  0.94   1.9\n- p4(v6):  0.38  0.38  0.62  0.12  0.88  0.88  0.12  0.62   2.6\n- p9(v5):  0.69  0.81  0.81  0.19 0.062  0.69  0.56  0.44   2.8\n- p6(v4):  0.62  0.12  0.38  0.38  0.12  0.62  0.88  0.88   2.6\n- p7(v3):  0.12  0.62  0.88  0.88  0.62  0.12  0.38  0.38   2.6\n- p5(v2):  0.88  0.88  0.12  0.62  0.38  0.38  0.62  0.12   2.6\n- p0(v1):     0     0     0     0     0     0     0     0     0\n\nWhile executing:  | qhull d Qx Qc Q11 Qt\nOptions selected for Qhull 2019.1.r 2019/06/21:\n  run-id 1334192790  delaunay  Qxact-merge  Qcoplanar-keep\n  Q11-trinormals Qtriangulate  Qtriangulate  _zero-centrum  Qinterior-keep\n  Q3-no-merge-vertices-dim-high  Pgood  _max-width 2.8  Error-roundoff 1.8e-14\n  _one-merge 3.4e-13  Visible-distance 1.1e-13  U-max-coplanar 1.1e-13\n  Width-outside 2.1e-13  _wide-facet 6.4e-13  _maxoutside 3.5e-13\n\n", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing"], "active": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]}