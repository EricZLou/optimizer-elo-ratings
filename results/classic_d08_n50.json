{"name": ["shgo_slsqp_sobol_cube", "shgo_powell_sobol_cube", "shgo_nelder_sobol_cube", "scipy_slsqp_cube", "scipy_powell_cube", "scipy_nelder_cube", "scipy_lbfgsb_cube", "pysot_ei_cube", "pysot_lcb_cube", "pysot_random_cube", "pysot_srbf_cube", "pysot_dycors_cube", "ax_default_cube", "optuna_cmaes_cube", "optuna_tpe_cube", "optuna_random_cube", "optuna_random_cube_clone", "optuna_random_cube_clone_1", "optuna_random_cube_clone_2", "platypus_genetic_cube", "platypus_evolutionary_cube", "platypus_nsgaii_cube", "platypus_cmaes_cube", "platypus_gde3_cube", "platypus_ibea_cube", "platypus_moead_cube", "platypus_omopso_cube", "platypus_smpso_cube", "platypus_spea2_cube", "platypus_epsmoea_cube", "nevergrad_ngopt_cube", "nevergrad_ngopt4_cube", "nevergrad_ngopt8_cube", "nevergrad_de_cube", "nevergrad_portfolio_cube", "nevergrad_oneplus_cube", "nevergrad_hammersley_cube", "hyperopt_atpe_cube", "hyperopt_rand_cube", "hyperopt_tpe_cube", "pymoo_nelder_cube", "pymoo_nsga3_cube", "pymoo_unsga3_cube", "pymoo_pattern_cube", "pymoo_nsga2_cube", "skopt_gp_default_cube", "ultraopt_random_cube", "ultraopt_etpe_cube", "bayesopt_ucb_cube", "bayesopt_ei_cube", "bayesopt_poi_cube", "dlib_cube"], "count": [0, 0, 1, 2, 0, 1, 1, 4, 3, 2, 4, 1, 1, 7, 1, 1, 3, 3, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3, 1, 4, 3, 1, 1, 3, 1, 1, 3, 2, 1, 1, 3, 0, 3, 3, 3, 6, 2, 3, 4], "rating": [1600, 1600, 1632.0346178105856, 1599.1067656950097, 1600, 1570.0, 1570.0, 1714.7114603634684, 1632.8891423805662, 1600.1392962748175, 1657.0690236138373, 1630.0, 1630.0, 1595.4019559236626, 1573.0198703252915, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1541.1034311335347, 1600, 1600, 1600, 1600, 1600.030962192966, 1630.0, 1686.867199291803, 1512.0627776138954, 1568.9927648729345, 1570.0, 1600.6967158225627, 1570.0, 1630.0, 1573.1655422233523, 1570.032441535158, 1571.0357514659427, 1569.996378491194, 1574.066939734095, 1600, 1629.898768088922, 1628.9678141127724, 1571.13905516682, 1660.8654854288377, 1543.0266953668824, 1570.8964125142256, 1712.7793016965638], "traceback": ["Traceback (most recent call last):\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/humpday/comparison/eloratings.py\", line 79, in optimizer_game\n    with_count=True)\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/humpday/optimizers/shgocube.py\", line 15, in shgo_slsqp_sobol_cube\n    local_method='slsqp', sampling_method='sobol')\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/humpday/optimizers/shgocube.py\", line 77, in shgo_cube\n    sampling_method=sampling_method)\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 421, in shgo\n    shc.construct_complex()\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 733, in construct_complex\n    self.find_minima()\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 742, in find_minima\n    self.minimizers()\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 1261, in delaunay_complex_minimisers\n    self.delaunay_triangulation(grow=True, n_prc=self.n_prc)\n  File \"/Users/petercotton/virtual-envs/optimizer-elo-ratings/lib/python3.7/site-packages/scipy/optimize/_shgo.py\", line 1538, in delaunay_triangulation\n    self.Tri = spatial.Delaunay(self.C, incremental=True)\n  File \"qhull.pyx\", line 1840, in scipy.spatial.qhull.Delaunay.__init__\n  File \"qhull.pyx\", line 356, in scipy.spatial.qhull._Qhull.__init__\nscipy.spatial.qhull.QhullError: QH6239 Qhull precision error: initial Delaunay input sites are cocircular or cospherical.  Use option 'Qz' for the Delaunay triangulation or Voronoi diagram of cocircular/cospherical points; it adds a point \"at infinity\".  Alternatively use option 'QJ' to joggle the input.  Use option 'Qs' to search all points for the initial simplex.\n\ninput sites with last coordinate projected to a paraboloid\n- p1(v10):   0.5   0.5   0.5   0.5   0.5   0.5   0.5   0.5     2\n- p3(v9):  0.25  0.75  0.25  0.75  0.25  0.75  0.25  0.75   2.5\n- p2(v8):  0.75  0.25  0.75  0.25  0.75  0.25  0.75  0.25   2.5\n- p8(v7):  0.19  0.31  0.31  0.69  0.56  0.19 0.062  0.94   1.9\n- p4(v6):  0.38  0.38  0.62  0.12  0.88  0.88  0.12  0.62   2.6\n- p9(v5):  0.69  0.81  0.81  0.19 0.062  0.69  0.56  0.44   2.8\n- p6(v4):  0.62  0.12  0.38  0.38  0.12  0.62  0.88  0.88   2.6\n- p7(v3):  0.12  0.62  0.88  0.88  0.62  0.12  0.38  0.38   2.6\n- p5(v2):  0.88  0.88  0.12  0.62  0.38  0.38  0.62  0.12   2.6\n- p0(v1):     0     0     0     0     0     0     0     0     0\n\nWhile executing:  | qhull d Qt Q11 Qc Qx\nOptions selected for Qhull 2019.1.r 2019/06/21:\n  run-id 1964088372  delaunay  Qtriangulate  Q11-trinormals Qtriangulate\n  Qcoplanar-keep  Qxact-merge  _zero-centrum  Qinterior-keep\n  Q3-no-merge-vertices-dim-high  Pgood  _max-width 2.8  Error-roundoff 1.8e-14\n  _one-merge 3.4e-13  Visible-distance 1.1e-13  U-max-coplanar 1.1e-13\n  Width-outside 2.1e-13  _wide-facet 6.4e-13  _maxoutside 3.5e-13\n\n", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing", "passing"], "active": [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]}